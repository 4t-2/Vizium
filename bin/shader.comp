#version 450

struct Particle {
    vec4 position;
    vec4 color;
	vec4 vel;
};

layout(std140, binding = 0, set = 0) readonly buffer ParticleSSBOIn {
   Particle particlesIn[ ];
};

layout(std140, binding = 0, set = 1) buffer ParticleSSBOOut {
   Particle particlesOut[ ];
};

layout (local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

uint index = gl_GlobalInvocationID.x;  

vec4 gravForce(vec4 position)
{
	vec4 normal = normalize(-particlesIn[index].position);
	float dist = length(particlesIn[index].position);
	float factor = 0.00001;

	return normal * (factor / (dist * dist));
}

void main() 
{
    particlesOut[index].color = particlesIn[index].color;
    particlesOut[index].position = particlesIn[index].position + particlesIn[index].vel;

	particlesOut[index].vel += gravForce(particlesIn[index].position);
}
